From e9fca5c3e0354323d91cbfc692c1a30a3e834e74 Mon Sep 17 00:00:00 2001
From: Arthur Sengileyev <arthur.sengileyev@gmail.com>
Date: Sat, 31 Aug 2024 20:56:16 +0300
Subject: [PATCH 4/4] Improve platform specific URL handling in `podman
 compose` for machines

Use filepath utility instead of generic string replace to convert path
on Windows. This also separates OS specific implementations to separate
compilation sources and removes redundant check for virtualization
provider on Windows platform.

Signed-off-by: Arthur Sengileyev <arthur.sengileyev@gmail.com>
---
 cmd/podman/compose_machine.go         | 13 +------------
 cmd/podman/compose_machine_unix.go    | 16 ++++++++++++++++
 cmd/podman/compose_machine_windows.go | 15 +++++++++++++++
 3 files changed, 32 insertions(+), 12 deletions(-)
 create mode 100644 cmd/podman/compose_machine_unix.go
 create mode 100644 cmd/podman/compose_machine_windows.go

diff --git a/cmd/podman/compose_machine.go b/cmd/podman/compose_machine.go
index 7d70cc84c..aadbfe42f 100644
--- a/cmd/podman/compose_machine.go
+++ b/cmd/podman/compose_machine.go
@@ -3,11 +3,9 @@
 package main
 
 import (
-	"errors"
 	"fmt"
 	"net/url"
 	"strconv"
-	"strings"
 
 	"github.com/containers/podman/v5/pkg/machine/define"
 	"github.com/containers/podman/v5/pkg/machine/env"
@@ -55,16 +53,7 @@ func getMachineConn(connectionURI string, parsedConnection *url.URL) (string, er
 		if err != nil {
 			return "", err
 		}
-		if machineProvider.VMType() == define.WSLVirt || machineProvider.VMType() == define.HyperVVirt {
-			if podmanPipe == nil {
-				return "", errors.New("pipe of machine is not set")
-			}
-			return strings.Replace(podmanPipe.Path, `\\.\pipe\`, "npipe:////./pipe/", 1), nil
-		}
-		if podmanSocket == nil {
-			return "", errors.New("socket of machine is not set")
-		}
-		return "unix://" + podmanSocket.Path, nil
+		return extractConnectionString(podmanSocket, podmanPipe)
 	}
 	return "", fmt.Errorf("could not find a matching machine for connection %q", connectionURI)
 }
diff --git a/cmd/podman/compose_machine_unix.go b/cmd/podman/compose_machine_unix.go
new file mode 100644
index 000000000..de2fb2934
--- /dev/null
+++ b/cmd/podman/compose_machine_unix.go
@@ -0,0 +1,16 @@
+//go:build (amd64 || arm64) && !windows
+
+package main
+
+import (
+	"errors"
+
+	"github.com/containers/podman/v5/pkg/machine/define"
+)
+
+func extractConnectionString(podmanSocket *define.VMFile, podmanPipe *define.VMFile) (string, error) {
+	if podmanSocket == nil {
+		return "", errors.New("socket of machine is not set")
+	}
+	return "unix://" + podmanSocket.Path, nil
+}
diff --git a/cmd/podman/compose_machine_windows.go b/cmd/podman/compose_machine_windows.go
new file mode 100644
index 000000000..49b8be172
--- /dev/null
+++ b/cmd/podman/compose_machine_windows.go
@@ -0,0 +1,15 @@
+package main
+
+import (
+	"errors"
+	"path/filepath"
+
+	"github.com/containers/podman/v5/pkg/machine/define"
+)
+
+func extractConnectionString(podmanSocket *define.VMFile, podmanPipe *define.VMFile) (string, error) {
+	if podmanPipe == nil {
+		return "", errors.New("pipe of machine is not set")
+	}
+	return "npipe://" + filepath.ToSlash(podmanPipe.Path), nil
+}
-- 
2.46.0

