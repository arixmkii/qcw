From 984461869f6304cbf69d92af6d7a805ddf14665e Mon Sep 17 00:00:00 2001
From: Arthur Sengileyev <arthur.sengileyev@gmail.com>
Date: Sat, 1 Apr 2023 23:49:13 +0300
Subject: [PATCH] Enable QEMU Podman machine on Windows

Signed-off-by: Arthur Sengileyev <arthur.sengileyev@gmail.com>
---
 pkg/machine/e2e/README.md                      | 11 +++++++++++
 pkg/machine/e2e/config_test.go                 | 14 ++++++++++++++
 pkg/machine/e2e/init_test.go                   |  3 +++
 pkg/machine/provider/platform_windows.go       |  2 ++
 pkg/machine/provider/platform_windows_amd64.go | 10 ++++++++++
 pkg/machine/provider/platform_windows_arm64.go | 12 ++++++++++++
 6 files changed, 52 insertions(+)
 create mode 100644 pkg/machine/provider/platform_windows_amd64.go
 create mode 100644 pkg/machine/provider/platform_windows_arm64.go

diff --git a/pkg/machine/e2e/README.md b/pkg/machine/e2e/README.md
index 5a1e324a2..30f62f5b2 100644
--- a/pkg/machine/e2e/README.md
+++ b/pkg/machine/e2e/README.md
@@ -28,6 +28,17 @@ Note: To run specific test files, add the test files to the end of the winmake c
 
 `./winmake localmachine "basic_test.go start_test.go"`
 
+### QEMU
+1. Install QEMU and add it to either user or sysmem PATH variable
+1. Install Podman release (needed to have gvproxy binary)
+1. Open a powershell as a regular user
+1. $env:CONTAINERS_MACHINE_PROVIDER="qemu"
+1. `./winmake localmachine`
+
+Note: To run specific test files, add the test files to the end of the winmake command:
+
+`./winmake localmachine "basic_test.go start_test.go"`
+
 ## MacOS
 
 ### Apple Hypervisor
diff --git a/pkg/machine/e2e/config_test.go b/pkg/machine/e2e/config_test.go
index 18b961a0d..997467076 100644
--- a/pkg/machine/e2e/config_test.go
+++ b/pkg/machine/e2e/config_test.go
@@ -249,3 +249,17 @@ func getFCOSDownloadLocation(p machine.VirtProvider) string {
 
 	return fcd.Location
 }
+
+func getQemuFcosDownloadLocation(p machine.VirtProvider) string {
+	dd, err := p.NewDownload("")
+	if err != nil {
+		Fail("unable to create new download")
+	}
+
+	fcd, err := dd.GetFCOSDownload(defaultStream)
+	if err != nil {
+		Fail("unable to get virtual machine image")
+	}
+
+	return fcd.Location
+}
diff --git a/pkg/machine/e2e/init_test.go b/pkg/machine/e2e/init_test.go
index 27b0b3d06..1a2314bb3 100644
--- a/pkg/machine/e2e/init_test.go
+++ b/pkg/machine/e2e/init_test.go
@@ -189,6 +189,9 @@ var _ = Describe("podman machine init", func() {
 			Skip("volumes are not supported on hyperv yet")
 		}
 		skipIfWSL("WSL volumes are much different.  This test will not pass as is")
+		if testProvider.VMType() == machine.QemuVirt && runtime.GOOS == "windows" {
+			Skip("volumes are not yet supported on official qemu builds running under Windows")
+		}
 
 		tmpDir, err := os.MkdirTemp("", "")
 		Expect(err).ToNot(HaveOccurred())
diff --git a/pkg/machine/provider/platform_windows.go b/pkg/machine/provider/platform_windows.go
index a57f283e3..0a4e8773a 100644
--- a/pkg/machine/provider/platform_windows.go
+++ b/pkg/machine/provider/platform_windows.go
@@ -32,6 +32,8 @@ func Get() (machine.VirtProvider, error) {
 		return wsl.VirtualizationProvider(), nil
 	case define.HyperVVirt:
 		return hyperv.VirtualizationProvider(), nil
+	case define.QemuVirt:
+		return getQemuProvider()
 	default:
 		return nil, fmt.Errorf("unsupported virtualization provider: `%s`", resolvedVMType.String())
 	}
diff --git a/pkg/machine/provider/platform_windows_amd64.go b/pkg/machine/provider/platform_windows_amd64.go
new file mode 100644
index 000000000..113ab2442
--- /dev/null
+++ b/pkg/machine/provider/platform_windows_amd64.go
@@ -0,0 +1,10 @@
+package provider
+
+import (
+	"github.com/containers/podman/v4/pkg/machine"
+	"github.com/containers/podman/v4/pkg/machine/qemu"
+)
+
+func getQemuProvider() (machine.VirtProvider, error) {
+	return qemu.VirtualizationProvider(), nil
+}
diff --git a/pkg/machine/provider/platform_windows_arm64.go b/pkg/machine/provider/platform_windows_arm64.go
new file mode 100644
index 000000000..8ec95785d
--- /dev/null
+++ b/pkg/machine/provider/platform_windows_arm64.go
@@ -0,0 +1,12 @@
+package provider
+
+import (
+	"fmt"
+
+	"github.com/containers/podman/v4/pkg/machine"
+	"github.com/containers/podman/v4/pkg/machine/define"
+)
+
+func getQemuProvider() (machine.VirtProvider, error) {
+	return nil, fmt.Errorf("unsupported virtualization provider: `%s`", define.QemuVirt.String())
+}
-- 
2.43.0

