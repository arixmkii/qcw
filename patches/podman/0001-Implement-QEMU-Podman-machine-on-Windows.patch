From 0f1e00204ba63bde718f97d3808ff7e97c741c44 Mon Sep 17 00:00:00 2001
From: Arthur Sengileyev <arthur.sengileyev@gmail.com>
Date: Tue, 20 Feb 2024 21:52:34 +0200
Subject: [PATCH 1/2] Implement QEMU Podman machine on Windows

Signed-off-by: Arthur Sengileyev <arthur.sengileyev@gmail.com>
---
 contrib/win-installer/podman-theme.wxl        |  2 +-
 contrib/win-installer/podman-theme.xml        |  5 ++--
 contrib/win-installer/welcome-install-dlg.wxs |  1 +
 pkg/machine/e2e/README.md                     |  9 ++++++
 pkg/machine/e2e/basic_test.go                 | 10 +++++++
 pkg/machine/e2e/config_init_test.go           |  6 ++++
 pkg/machine/e2e/init_test.go                  |  3 ++
 pkg/machine/provider/platform_windows.go      | 16 +++-------
 .../provider/platform_windows_amd64.go        | 30 +++++++++++++++++++
 .../provider/platform_windows_arm64.go        | 30 +++++++++++++++++++
 10 files changed, 97 insertions(+), 15 deletions(-)
 create mode 100644 pkg/machine/provider/platform_windows_amd64.go
 create mode 100644 pkg/machine/provider/platform_windows_arm64.go

diff --git a/contrib/win-installer/podman-theme.wxl b/contrib/win-installer/podman-theme.wxl
index b5666fd67..3fe96ba7a 100644
--- a/contrib/win-installer/podman-theme.wxl
+++ b/contrib/win-installer/podman-theme.wxl
@@ -7,7 +7,7 @@
   <String Id="Title" Value="[WixBundleName] [VERSION]" />
   <String Id="InstallHeader" Value="Welcome to [WixBundleName] Setup" />
   <String Id="InstallMessage" Value="Welcome to the [WixBundleName] [VERSION] setup wizard. This will install [WixBundleName] on your computer." />
-  <String Id="ProvidersMessage" Value="Additionally, you have the option to select the virtualization provider required by Podman: WSLv2 or Hyper-V.
+  <String Id="ProvidersMessage" Value="Additionally, you have the option to select the virtualization provider required by Podman: WSLv2 or Hyper-V or QEMU.
 
 If it's not already installed, you will have to install the virtualization provider manually.
 
diff --git a/contrib/win-installer/podman-theme.xml b/contrib/win-installer/podman-theme.xml
index fd681e67d..f256d0591 100644
--- a/contrib/win-installer/podman-theme.xml
+++ b/contrib/win-installer/podman-theme.xml
@@ -36,6 +36,7 @@
             <RadioButtons Name="MachineProvider">
                 <RadioButton Name="WSLRadioButton" Value="wsl" VisibleCondition="NOT PreviousInstallFolder" X="185" Y="260" Width="-11" Height="17" TabStop="yes" FontId="3" HideWhenDisabled="yes" EnableCondition="" >Windows Linux Subsystem (WSLv2)</RadioButton>
                 <RadioButton Name="HyperVRadioButton"  Value="hyperv" VisibleCondition="NOT PreviousInstallFolder" X="185" Y="285" Width="-11" Height="17" TabStop="yes" FontId="3" HideWhenDisabled="yes">Windows Hyper-V</RadioButton>
+                <RadioButton Name="QemuRadioButton" Value="qemu" VisibleCondition="NOT PreviousInstallFolder" X="185" Y="310" Width="-11" Height="17" TabStop="yes" FontId="3" HideWhenDisabled="yes">QEMU (distribution of QEMU not bundled)</RadioButton>
             </RadioButtons>
             <Hypertext Name="EulaHyperlink" X="185" Y="-111" Width="-11" Height="17" TabStop="yes" FontId="3" HideWhenDisabled="yes">#(loc.InstallLicenseLinkText)</Hypertext>
             <Label Name="InstallVersion" X="510" Y="-50" Width="-11" Height="17" FontId="3" DisablePrefix="yes" VisibleCondition="WixStdBAShowVersion">#(loc.InstallVersion)</Label>
diff --git a/contrib/win-installer/welcome-install-dlg.wxs b/contrib/win-installer/welcome-install-dlg.wxs
index c6dc65cbf..f27d420d6 100644
--- a/contrib/win-installer/welcome-install-dlg.wxs
+++ b/contrib/win-installer/welcome-install-dlg.wxs
@@ -11,6 +11,7 @@
                     <RadioButtonGroup Property="MACHINE_PROVIDER">
                         <RadioButton Text="Windows Linux Subsystem (WSLv2)" Height="15" Value="wsl" Width="226" X="10" Y="0" />
                         <RadioButton Text="Windows Hyper-V" Height="15" Value="hyperv" Width="226" X="10" Y="15" />
+                        <RadioButton Text="QEMU (distribution of QEMU not bundled)" Height="15" Value="qemu" Width="226" X="10" Y="30" />
                     </RadioButtonGroup>
                 </Control>
                 <Control Id="Back" Type="PushButton" X="156" Y="243" Width="56" Height="17" Disabled="yes" Text="!(loc.WixUIBack)" />
diff --git a/pkg/machine/e2e/README.md b/pkg/machine/e2e/README.md
index ae6873f42..55cdab839 100644
--- a/pkg/machine/e2e/README.md
+++ b/pkg/machine/e2e/README.md
@@ -64,6 +64,15 @@ above.
 1. `$env:CONTAINERS_MACHINE_PROVIDER="wsl"`
 1. `.\winmake localmachine`
 
+### QEMU
+
+1. Install QEMU and add it to either user or sysmem PATH variable
+1. Open a powershell as a regular user
+1. `.\winmake.ps1 podman-remote && .\winmake.ps1 win-gvproxy`
+1. `$env:CONTAINERS_HELPER_BINARY_DIR="$pwd\bin\windows"`
+1. `$env:CONTAINERS_MACHINE_PROVIDER="qemu"`
+1. `.\winmake localmachine`
+
 ## MacOS
 
 Macs now support two different machine providers: `applehv` and `libkrun`. The
diff --git a/pkg/machine/e2e/basic_test.go b/pkg/machine/e2e/basic_test.go
index c060479cd..aa3626a79 100644
--- a/pkg/machine/e2e/basic_test.go
+++ b/pkg/machine/e2e/basic_test.go
@@ -9,6 +9,7 @@ import (
 	"os"
 	"path"
 	"path/filepath"
+	"runtime"
 	"time"
 
 	"github.com/containers/podman/v5/pkg/machine/define"
@@ -60,6 +61,9 @@ var _ = Describe("run basic podman commands", func() {
 	})
 
 	It("Volume ops", func() {
+		if testProvider.VMType() == define.QemuVirt && runtime.GOOS == "windows" {
+			Skip("volumes are not yet supported on official QEMU builds running under Windows")
+		}
 		tDir, err := filepath.Abs(GinkgoT().TempDir())
 		Expect(err).ToNot(HaveOccurred())
 		roFile := filepath.Join(tDir, "attr-test-file")
@@ -100,6 +104,9 @@ var _ = Describe("run basic podman commands", func() {
 		// In theory this could run on MacOS too, but we know virtiofs works for that now,
 		// this is just testing linux
 		skipIfNotVmtype(define.QemuVirt, "This is just adding coverage for virtiofs on linux")
+		if testProvider.VMType() == define.QemuVirt && runtime.GOOS == "windows" {
+			Skip("volumes are not yet supported on official QEMU builds running under Windows")
+		}
 
 		tDir, err := filepath.Abs(GinkgoT().TempDir())
 		Expect(err).ToNot(HaveOccurred())
@@ -190,6 +197,9 @@ var _ = Describe("run basic podman commands", func() {
 
 	It("podman volume on non-standard path", func() {
 		skipIfWSL("Requires standard volume handling")
+		if testProvider.VMType() == define.QemuVirt && runtime.GOOS == "windows" {
+			Skip("volumes are not yet supported on official QEMU builds running under Windows")
+		}
 		dir, err := os.MkdirTemp("", "machine-volume")
 		Expect(err).ToNot(HaveOccurred())
 		defer os.RemoveAll(dir)
diff --git a/pkg/machine/e2e/config_init_test.go b/pkg/machine/e2e/config_init_test.go
index 042301047..9b4e3e129 100644
--- a/pkg/machine/e2e/config_init_test.go
+++ b/pkg/machine/e2e/config_init_test.go
@@ -1,9 +1,11 @@
 package e2e_test
 
 import (
+	"runtime"
 	"strconv"
 	"strings"
 
+	"github.com/containers/podman/v5/pkg/machine/define"
 	. "github.com/onsi/ginkgo/v2"
 	. "github.com/onsi/gomega"
 	. "github.com/onsi/gomega/gexec"
@@ -67,6 +69,10 @@ func (i *initMachine) buildCmd(m *machineTestBuilder) []string {
 	for _, v := range i.volumes {
 		cmd = append(cmd, "--volume", v)
 	}
+	// Suppress default mounts for QEMU on Windows
+	if len(i.volumes) == 0 && testProvider.VMType() == define.QemuVirt && runtime.GOOS == "windows" {
+		cmd = append(cmd, "--volume", "")
+	}
 	if i.now {
 		cmd = append(cmd, "--now")
 	}
diff --git a/pkg/machine/e2e/init_test.go b/pkg/machine/e2e/init_test.go
index bd5fe683c..c5d7bfaba 100644
--- a/pkg/machine/e2e/init_test.go
+++ b/pkg/machine/e2e/init_test.go
@@ -202,6 +202,9 @@ var _ = Describe("podman machine init", func() {
 			Skip("volumes are not supported on hyperv yet")
 		}
 		skipIfWSL("WSL volumes are much different.  This test will not pass as is")
+		if testProvider.VMType() == define.QemuVirt && runtime.GOOS == "windows" {
+			Skip("volumes are not yet supported on official QEMU builds running under Windows")
+		}
 
 		tmpDir, err := os.MkdirTemp("", "")
 		Expect(err).ToNot(HaveOccurred())
diff --git a/pkg/machine/provider/platform_windows.go b/pkg/machine/provider/platform_windows.go
index eab7502af..056db09e5 100644
--- a/pkg/machine/provider/platform_windows.go
+++ b/pkg/machine/provider/platform_windows.go
@@ -31,6 +31,8 @@ func Get() (vmconfigs.VMProvider, error) {
 
 	logrus.Debugf("Using Podman machine with `%s` virtualization provider", resolvedVMType.String())
 	switch resolvedVMType {
+	case define.QemuVirt:
+		return getQemuProvider()
 	case define.WSLVirt:
 		return new(wsl.WSLStubber), nil
 	case define.HyperVVirt:
@@ -43,20 +45,10 @@ func Get() (vmconfigs.VMProvider, error) {
 	}
 }
 
-func GetAll() []vmconfigs.VMProvider {
-	return []vmconfigs.VMProvider{
-		new(wsl.WSLStubber),
-		new(hyperv.HyperVStubber),
-	}
-}
-
-// SupportedProviders returns the providers that are supported on the host operating system
-func SupportedProviders() []define.VMType {
-	return []define.VMType{define.HyperVVirt, define.WSLVirt}
-}
-
 func IsInstalled(provider define.VMType) (bool, error) {
 	switch provider {
+	case define.QemuVirt:
+		return isQemuInstalled(), nil
 	case define.WSLVirt:
 		return wutil.IsWSLInstalled(), nil
 	case define.HyperVVirt:
diff --git a/pkg/machine/provider/platform_windows_amd64.go b/pkg/machine/provider/platform_windows_amd64.go
new file mode 100644
index 000000000..f76fe2a53
--- /dev/null
+++ b/pkg/machine/provider/platform_windows_amd64.go
@@ -0,0 +1,30 @@
+package provider
+
+import (
+	"github.com/containers/podman/v5/pkg/machine/define"
+	"github.com/containers/podman/v5/pkg/machine/hyperv"
+	"github.com/containers/podman/v5/pkg/machine/qemu"
+	"github.com/containers/podman/v5/pkg/machine/vmconfigs"
+	"github.com/containers/podman/v5/pkg/machine/wsl"
+)
+
+func getQemuProvider() (vmconfigs.VMProvider, error) {
+	return new(qemu.QEMUStubber), nil
+}
+
+func isQemuInstalled() bool {
+	return true
+}
+
+func GetAll() []vmconfigs.VMProvider {
+	return []vmconfigs.VMProvider{
+		new(wsl.WSLStubber),
+		new(hyperv.HyperVStubber),
+		new(qemu.QEMUStubber),
+	}
+}
+
+// SupportedProviders returns the providers that are supported on the host operating system
+func SupportedProviders() []define.VMType {
+	return []define.VMType{define.HyperVVirt, define.WSLVirt, define.QemuVirt}
+}
diff --git a/pkg/machine/provider/platform_windows_arm64.go b/pkg/machine/provider/platform_windows_arm64.go
new file mode 100644
index 000000000..dda895b51
--- /dev/null
+++ b/pkg/machine/provider/platform_windows_arm64.go
@@ -0,0 +1,30 @@
+package provider
+
+import (
+	"fmt"
+
+	"github.com/containers/podman/v5/pkg/machine/define"
+	"github.com/containers/podman/v5/pkg/machine/hyperv"
+	"github.com/containers/podman/v5/pkg/machine/vmconfigs"
+	"github.com/containers/podman/v5/pkg/machine/wsl"
+)
+
+func getQemuProvider() (vmconfigs.VMProvider, error) {
+	return nil, fmt.Errorf("unsupported virtualization provider: `%s`", define.QemuVirt.String())
+}
+
+func isQemuInstalled() bool {
+	return false
+}
+
+func GetAll() []vmconfigs.VMProvider {
+	return []vmconfigs.VMProvider{
+		new(wsl.WSLStubber),
+		new(hyperv.HyperVStubber),
+	}
+}
+
+// SupportedProviders returns the providers that are supported on the host operating system
+func SupportedProviders() []define.VMType {
+	return []define.VMType{define.HyperVVirt, define.WSLVirt}
+}
-- 
2.48.1

