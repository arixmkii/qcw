From 92cafaf59cba7d305df3723a7a1d59dbda14c603 Mon Sep 17 00:00:00 2001
From: Arthur Sengileyev <arthur.sengileyev@gmail.com>
Date: Thu, 25 Jul 2024 18:27:49 +0300
Subject: [PATCH 3/3] Implement publishing API UNIX socket on Windows platforms

gvproxy and win-sshproxy have capabilities to serve this type of enpoint.
This change only adds one additional API enpoint publishing by appending
proxy command lines.

Signed-off-by: Arthur Sengileyev <arthur.sengileyev@gmail.com>
---
 pkg/machine/machine_windows.go           |  8 ++++++++
 pkg/machine/shim/networking_windows.go   | 14 +++++++++++++-
 pkg/machine/vmconfigs/machine.go         | 14 +-------------
 pkg/machine/vmconfigs/machine_unix.go    | 11 +++++++++++
 pkg/machine/vmconfigs/machine_windows.go | 11 +++++++++++
 pkg/machine/wsl/stubber.go               |  5 +++++
 6 files changed, 49 insertions(+), 14 deletions(-)
 create mode 100644 pkg/machine/vmconfigs/machine_unix.go
 create mode 100644 pkg/machine/vmconfigs/machine_windows.go

diff --git a/pkg/machine/machine_windows.go b/pkg/machine/machine_windows.go
index 7d39795bc..0016c3679 100644
--- a/pkg/machine/machine_windows.go
+++ b/pkg/machine/machine_windows.go
@@ -18,6 +18,7 @@ import (
 	winio "github.com/Microsoft/go-winio"
 	"github.com/containers/podman/v5/pkg/machine/define"
 	"github.com/containers/podman/v5/pkg/machine/env"
+	"github.com/containers/podman/v5/pkg/machine/sockets"
 	"github.com/containers/storage/pkg/fileutils"
 	"github.com/sirupsen/logrus"
 )
@@ -45,6 +46,7 @@ type WinProxyOpts struct {
 	RemoteUsername string
 	Rootful        bool
 	VMType         define.VMType
+	Socket         *define.VMFile
 }
 
 func GetProcessState(pid int) (active bool, exitCode int) {
@@ -160,6 +162,12 @@ func launchWinProxy(opts WinProxyOpts) (bool, string, error) {
 		waitPipe = GlobalNamedPipe
 	}
 
+	hostURL, err := sockets.ToUnixURL(opts.Socket)
+	if err != nil {
+		return false, "", err
+	}
+	args = append(args, hostURL.String(), dest, opts.IdentityPath)
+
 	cmd := exec.Command(command, args...)
 	logrus.Debugf("winssh command: %s %v", command, args)
 	if err := cmd.Start(); err != nil {
diff --git a/pkg/machine/shim/networking_windows.go b/pkg/machine/shim/networking_windows.go
index 5428a8db4..f108919cf 100644
--- a/pkg/machine/shim/networking_windows.go
+++ b/pkg/machine/shim/networking_windows.go
@@ -6,6 +6,7 @@ import (
 	"github.com/containers/podman/v5/pkg/machine"
 	"github.com/containers/podman/v5/pkg/machine/define"
 	"github.com/containers/podman/v5/pkg/machine/env"
+	sc "github.com/containers/podman/v5/pkg/machine/sockets"
 	"github.com/containers/podman/v5/pkg/machine/vmconfigs"
 )
 
@@ -22,5 +23,16 @@ func setupMachineSockets(mc *vmconfigs.MachineConfig, dirs *define.MachineDirs)
 		state = machine.DockerGlobal
 	}
 
-	return sockets, sockets[len(sockets)-1], state, nil
+	hostSocket, err := mc.APISocket()
+	if err != nil {
+		return nil, "", 0, err
+	}
+
+	hostURL, err := sc.ToUnixURL(hostSocket)
+	if err != nil {
+		return nil, "", 0, err
+	}
+	sockets = append(sockets, hostURL.String())
+
+	return sockets, sockets[len(sockets)-2], state, nil
 }
diff --git a/pkg/machine/vmconfigs/machine.go b/pkg/machine/vmconfigs/machine.go
index bbd0f6cc9..8c2c33ad1 100644
--- a/pkg/machine/vmconfigs/machine.go
+++ b/pkg/machine/vmconfigs/machine.go
@@ -15,7 +15,6 @@ import (
 	"github.com/containers/podman/v5/pkg/errorhandling"
 	"github.com/containers/podman/v5/pkg/machine/connection"
 	"github.com/containers/podman/v5/pkg/machine/define"
-	"github.com/containers/podman/v5/pkg/machine/env"
 	"github.com/containers/podman/v5/pkg/machine/lock"
 	"github.com/containers/podman/v5/pkg/machine/ports"
 	"github.com/containers/storage/pkg/fileutils"
@@ -331,19 +330,8 @@ func (mc *MachineConfig) IsFirstBoot() (bool, error) {
 }
 
 func (mc *MachineConfig) ConnectionInfo(vmtype define.VMType) (*define.VMFile, *define.VMFile, error) {
-	var (
-		socket *define.VMFile
-		pipe   *define.VMFile
-	)
-
-	if vmtype == define.HyperVVirt || vmtype == define.WSLVirt {
-		pipeName := env.WithPodmanPrefix(mc.Name)
-		pipe = &define.VMFile{Path: `\\.\pipe\` + pipeName}
-		return nil, pipe, nil
-	}
-
 	socket, err := mc.APISocket()
-	return socket, nil, err
+	return socket, getPipe(mc.Name), err
 }
 
 // LoadMachineByName returns a machine config based on the vm name and provider
diff --git a/pkg/machine/vmconfigs/machine_unix.go b/pkg/machine/vmconfigs/machine_unix.go
new file mode 100644
index 000000000..1961aeb71
--- /dev/null
+++ b/pkg/machine/vmconfigs/machine_unix.go
@@ -0,0 +1,11 @@
+//go:build darwin || dragonfly || freebsd || linux || netbsd || openbsd
+
+package vmconfigs
+
+import (
+	"github.com/containers/podman/v5/pkg/machine/define"
+)
+
+func getPipe(name string) *define.VMFile {
+	return nil
+}
diff --git a/pkg/machine/vmconfigs/machine_windows.go b/pkg/machine/vmconfigs/machine_windows.go
new file mode 100644
index 000000000..1092b840e
--- /dev/null
+++ b/pkg/machine/vmconfigs/machine_windows.go
@@ -0,0 +1,11 @@
+package vmconfigs
+
+import (
+	"github.com/containers/podman/v5/pkg/machine/define"
+	"github.com/containers/podman/v5/pkg/machine/env"
+)
+
+func getPipe(name string) *define.VMFile {
+	pipeName := env.WithPodmanPrefix(name)
+	return &define.VMFile{Path: `\\.\pipe\` + pipeName}
+}
diff --git a/pkg/machine/wsl/stubber.go b/pkg/machine/wsl/stubber.go
index 3a79f095c..29f82edb3 100644
--- a/pkg/machine/wsl/stubber.go
+++ b/pkg/machine/wsl/stubber.go
@@ -191,6 +191,10 @@ func (w WSLStubber) RequireExclusiveActive() bool {
 }
 
 func (w WSLStubber) PostStartNetworking(mc *vmconfigs.MachineConfig, noInfo bool) error {
+	socket, err := mc.APISocket()
+	if err != nil {
+		return err
+	}
 	winProxyOpts := machine.WinProxyOpts{
 		Name:           mc.Name,
 		IdentityPath:   mc.SSH.IdentityPath,
@@ -198,6 +202,7 @@ func (w WSLStubber) PostStartNetworking(mc *vmconfigs.MachineConfig, noInfo bool
 		RemoteUsername: mc.SSH.RemoteUsername,
 		Rootful:        mc.HostUser.Rootful,
 		VMType:         w.VMType(),
+		Socket:         socket,
 	}
 	machine.LaunchWinProxy(winProxyOpts, noInfo)
 
-- 
2.45.2

