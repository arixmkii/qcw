From cfd16bf9155f9fbe0f272ca4d24af662313245d5 Mon Sep 17 00:00:00 2001
From: Arthur Sengileyev <arthur.sengileyev@gmail.com>
Date: Mon, 8 Jul 2024 18:52:50 +0300
Subject: [PATCH 3/3] Implement disable default mounts via command line

Signed-off-by: Arthur Sengileyev <arthur.sengileyev@gmail.com>
---
 pkg/machine/e2e/config_test.go |  4 ++++
 pkg/machine/qemu/stubber.go    | 10 +++++++---
 pkg/machine/shim/volume.go     |  3 +++
 3 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/pkg/machine/e2e/config_test.go b/pkg/machine/e2e/config_test.go
index 3172601c5..b15c6926b 100644
--- a/pkg/machine/e2e/config_test.go
+++ b/pkg/machine/e2e/config_test.go
@@ -198,6 +198,10 @@ func (m *machineTestBuilder) run() (*machineSession, error) {
 }
 
 func runWrapper(podmanBinary string, cmdArgs []string, timeout time.Duration, wait bool) (*machineSession, error) {
+	if len(cmdArgs) >= 2 && cmdArgs[0] == "machine" && cmdArgs[1] == "init" && !slices.Contains(cmdArgs, "-v") {
+		tailArgs := append([]string{"-v", ""}, cmdArgs[2:]...)
+		cmdArgs = append([]string{"machine", "init"}, tailArgs...)
+	}
 	if len(os.Getenv("DEBUG")) > 0 {
 		cmdArgs = append([]string{"--log-level=debug"}, cmdArgs...)
 	}
diff --git a/pkg/machine/qemu/stubber.go b/pkg/machine/qemu/stubber.go
index af9a8dcbe..63e0ce7ae 100644
--- a/pkg/machine/qemu/stubber.go
+++ b/pkg/machine/qemu/stubber.go
@@ -168,9 +168,13 @@ func (q *QEMUStubber) StartVM(mc *vmconfigs.MachineConfig) (func() error, func()
 	if err != nil {
 		return nil, nil, err
 	}
-	spawner, err := newVirtiofsdSpawner(runtime)
-	if err != nil {
-		return nil, nil, err
+
+	var spawner *virtiofsdSpawner
+	if len(mc.Mounts) > 0 {
+		spawner, err = newVirtiofsdSpawner(runtime)
+		if err != nil {
+			return nil, nil, err
+		}
 	}
 
 	for _, hostmnt := range mc.Mounts {
diff --git a/pkg/machine/shim/volume.go b/pkg/machine/shim/volume.go
index a145f5847..e67e577db 100644
--- a/pkg/machine/shim/volume.go
+++ b/pkg/machine/shim/volume.go
@@ -8,6 +8,9 @@ import (
 func CmdLineVolumesToMounts(volumes []string, volumeType vmconfigs.VolumeMountType) []*vmconfigs.Mount {
 	mounts := []*vmconfigs.Mount{}
 	for i, volume := range volumes {
+		if volume == "" {
+			continue
+		}
 		var mount vmconfigs.Mount
 		tag, source, target, readOnly, _ := vmconfigs.SplitVolume(i, volume)
 		switch volumeType {
-- 
2.45.2

