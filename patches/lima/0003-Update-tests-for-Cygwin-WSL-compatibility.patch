From 1a01e01305e5ec6474a65b98f542737dc50d2659 Mon Sep 17 00:00:00 2001
From: Arthur Sengileyev <arthur.sengileyev@gmail.com>
Date: Sun, 9 Feb 2025 13:26:40 +0200
Subject: [PATCH] Update tests for Cygwin/WSL compatibility

---
 hack/common.inc.sh           |  2 +-
 hack/test-mount-home.sh      |  5 +++--
 hack/test-port-forwarding.pl | 12 +++++++++++-
 hack/test-templates.sh       | 35 ++++++++++++++++++++++++++---------
 pkg/qemu/qemu.go             |  2 +-
 5 files changed, 42 insertions(+), 14 deletions(-)

diff --git a/hack/common.inc.sh b/hack/common.inc.sh
index 1e90ff8e..d4d408b7 100644
--- a/hack/common.inc.sh
+++ b/hack/common.inc.sh
@@ -23,7 +23,7 @@ if [[ ${BASH_VERSINFO:-0} -lt 4 ]]; then
 	exit 1
 fi
 
-: "${LIMA_HOME:=$HOME/.lima}"
+: "${LIMA_HOME:=${HOME_SRC:-$HOME}/.lima}"
 _IPERF3=iperf3
 # iperf3-darwin does some magic on macOS to avoid "No route on host" on macOS 15
 # https://github.com/lima-vm/socket_vmnet/issues/85
diff --git a/hack/test-mount-home.sh b/hack/test-mount-home.sh
index dd8e1afa..5e0c2fed 100755
--- a/hack/test-mount-home.sh
+++ b/hack/test-mount-home.sh
@@ -11,14 +11,15 @@ if [ "$#" -ne 1 ]; then
 fi
 
 NAME="$1"
-hometmp="$HOME/lima-test-tmp"
+hometmp="${HOME_SRC:-$HOME}/lima-test-tmp"
+hometmpdst="${HOME_DST:-$HOME}/lima-test-tmp"
 INFO "Testing home access (\"$hometmp\")"
 rm -rf "$hometmp"
 mkdir -p "$hometmp"
 defer "rm -rf \"$hometmp\""
 echo "random-content-${RANDOM}" >"$hometmp/random"
 expected="$(cat "$hometmp/random")"
-got="$(limactl shell "$NAME" cat "$hometmp/random")"
+got="$(limactl shell "$NAME" cat "$hometmpdst/random")"
 INFO "$hometmp/random: expected=${expected}, got=${got}"
 if [ "$got" != "$expected" ]; then
 	ERROR "Home directory is not shared?"
diff --git a/hack/test-port-forwarding.pl b/hack/test-port-forwarding.pl
index 3a41ce1e..9b2855cc 100755
--- a/hack/test-port-forwarding.pl
+++ b/hack/test-port-forwarding.pl
@@ -33,6 +33,11 @@ if ($ipv4 eq "127.0.0.1" && $Config{osname} eq "darwin") {
     chomp $ipv4;
 }
 
+if ( $Config{osname} eq "cygwin") {
+  $ipv4 = qx(wsl -d lima-infra ip -4 -o addr show eth0 | awk '{print \$4}' | cut -d/ -f1);
+  chomp $ipv4;
+}
+
 # If $instance is a filename, add our portForwards to it to enable testing
 if (-f $instance) {
     open(my $fh, "+< $instance") or die "Can't open $instance for read/write: $!";
@@ -100,6 +105,10 @@ while (<DATA>) {
         printf "ðŸš§ Not supported on $Config{osname}: # $_\n";
         next;
     }
+    if ($test{mode} eq "forward" && $test{host_ip} eq "::" && $Config{osname} eq "cygwin") {
+        printf "ðŸš§ Not supported on $Config{osname}: # $_\n";
+        next;
+    }
     $test{host_ip} ||= "127.0.0.1";
     $test{host_port} ||= $test{guest_port};
 
@@ -129,7 +138,8 @@ EOF
 sleep 5;
 
 # Record current log size, so we can skip prior output
-$ENV{LIMA_HOME} ||= "$ENV{HOME}/.lima";
+$ENV{HOME_SRC} ||= "$ENV{HOME}";
+$ENV{LIMA_HOME} ||= "$ENV{HOME_SRC}/.lima";
 my $ha_log = "$ENV{LIMA_HOME}/$instance/ha.stderr.log";
 my $ha_log_size = -s $ha_log or die;
 
diff --git a/hack/test-templates.sh b/hack/test-templates.sh
index 26e064b5..6a08c0e9 100755
--- a/hack/test-templates.sh
+++ b/hack/test-templates.sh
@@ -13,6 +13,9 @@ fi
 FILE="$1"
 NAME="$(basename -s .yaml "$FILE")"
 
+HOME_SRC=${HOME_SRC:-$HOME}
+HOME_DST=${HOME_DST:-$HOME}
+
 INFO "Validating \"$FILE\""
 limactl validate "$FILE"
 
@@ -93,7 +96,7 @@ esac
 limactl rm -f "${NAME}-tmp"
 
 if [[ -n ${CHECKS["port-forwards"]} ]]; then
-	tmpconfig="$HOME/lima-config-tmp"
+	tmpconfig="$HOME_SRC/lima-config-tmp"
 	mkdir -p "${tmpconfig}"
 	defer "rm -rf \"$tmpconfig\""
 	tmpfile="${tmpconfig}/${NAME}.yaml"
@@ -101,17 +104,21 @@ if [[ -n ${CHECKS["port-forwards"]} ]]; then
 	FILE="${tmpfile}"
 	INFO "Setup port forwarding rules for testing in \"${FILE}\""
 	"${scriptdir}/test-port-forwarding.pl" "${FILE}"
-	limactl validate "$FILE"
+	if [ "$(uname -o)" = "Msys" ]; then
+		limactl validate $(cygpath -w "$FILE")
+	else
+		limactl validate "$FILE"
+	fi
 fi
 
 function diagnose() {
 	NAME="$1"
 	set -x +e
-	tail "$HOME/.lima/${NAME}"/*.log
+	tail "$HOME_SRC/.lima/${NAME}"/*.log
 	limactl shell "$NAME" systemctl --no-pager status
 	limactl shell "$NAME" systemctl --no-pager
 	mkdir -p failure-logs
-	cp -pf "$HOME/.lima/${NAME}"/*.log failure-logs/
+	cp -pf "$HOME_SRC/.lima/${NAME}"/*.log failure-logs/
 	limactl shell "$NAME" sudo cat /var/log/cloud-init-output.log | tee failure-logs/cloud-init-output.log
 	set +x -e
 }
@@ -130,7 +137,11 @@ fi
 
 set -x
 # shellcheck disable=SC2086
-"${LIMACTL_CREATE[@]}" ${LIMACTL_CREATE_ARGS} "$FILE"
+if [ "$(uname -o)" = "Msys" ]; then
+	"${LIMACTL_CREATE[@]}" ${LIMACTL_CREATE_ARGS} $(cygpath -w "$FILE")
+else
+	"${LIMACTL_CREATE[@]}" ${LIMACTL_CREATE_ARGS} "$FILE"
+fi
 set +x
 
 if [[ -n ${CHECKS["mount-path-with-spaces"]} ]]; then
@@ -152,7 +163,7 @@ limactl shell "$NAME" cat /etc/os-release
 set +x
 
 INFO "Testing that host home is not wiped out"
-[ -e "$HOME/.lima" ]
+[ -e "$HOME_SRC/.lima" ]
 
 if [[ -n ${CHECKS["mount-path-with-spaces"]} ]]; then
 	INFO 'Testing that "/tmp/lima test dir with spaces" is not wiped out'
@@ -196,7 +207,9 @@ tmpdir="$(mktemp -d "${TMPDIR:-/tmp}"/lima-test-templates.XXXXXX)"
 defer "rm -rf \"$tmpdir\""
 tmpfile="$tmpdir/lima-hostname"
 rm -f "$tmpfile"
-limactl cp "$NAME":/etc/hostname "$tmpfile"
+wintmpdir="$(cygpath -w / | sed 's_\\_/_g' | sed 's/.$//')"
+mnttmpdir="$(wsl -d lima-infra wslpath $wintmpdir)"
+limactl cp "$NAME":/etc/hostname "$mnttmpdir$tmpfile"
 expected="$(limactl shell "$NAME" cat /etc/hostname)"
 got="$(cat "$tmpfile")"
 INFO "/etc/hostname: expected=${expected}, got=${got}"
@@ -249,7 +262,8 @@ if [[ -n ${CHECKS["container-engine"]} ]]; then
 	limactl shell "$NAME" $CONTAINER_ENGINE rm -f nginx
 	set +x
 	if [[ -n ${CHECKS["mount-home"]} ]]; then
-		hometmp="$HOME/lima-container-engine-test-tmp"
+		hometmp="$HOME_SRC/lima-container-engine-test-tmp"
+		hometmpdst="$HOME_DST/lima-container-engine-test-tmp"
 		# test for https://github.com/lima-vm/lima/issues/187
 		INFO "Testing home bind mount (\"$hometmp\")"
 		rm -rf "$hometmp"
@@ -259,7 +273,7 @@ if [[ -n ${CHECKS["container-engine"]} ]]; then
 		limactl shell "$NAME" $CONTAINER_ENGINE pull --quiet ${alpine_image}
 		echo "random-content-${RANDOM}" >"$hometmp/random"
 		expected="$(cat "$hometmp/random")"
-		got="$(limactl shell "$NAME" $CONTAINER_ENGINE run --rm -v "$hometmp/random":/mnt/foo ${alpine_image} cat /mnt/foo)"
+		got="$(limactl shell "$NAME" $CONTAINER_ENGINE run --rm -v "$hometmpdst/random":/mnt/foo ${alpine_image} cat /mnt/foo)"
 		INFO "$hometmp/random: expected=${expected}, got=${got}"
 		if [ "$got" != "$expected" ]; then
 			ERROR "Home directory is not shared?"
@@ -294,6 +308,9 @@ if [[ -n ${CHECKS["port-forwards"]} ]]; then
 		else
 			hostip=$(perl -MSocket -MSys::Hostname -E 'say inet_ntoa(scalar gethostbyname(hostname()))')
 		fi
+		if [ "$(uname -o)" = "Msys" ]; then
+			hostip=$(wsl -d lima-infra ip -4 -o addr show eth0 | awk '{print $4}' | cut -d/ -f1)
+		fi
 		if [ -n "${hostip}" ]; then
 			sudo=""
 			if [[ ${NAME} == "alpine"* ]]; then
diff --git a/pkg/qemu/qemu.go b/pkg/qemu/qemu.go
index 1d8fea6a..ed4390cf 100644
--- a/pkg/qemu/qemu.go
+++ b/pkg/qemu/qemu.go
@@ -1080,7 +1080,7 @@ func qemuEdk2Arch(arch limayaml.Arch) string {
 }
 
 func Exe(arch limayaml.Arch) (exe string, args []string, err error) {
-	exeBase := "qemu-system-" + qemuArch(arch)
+	exeBase := "qemu-system-" + qemuArch(arch) + "w"
 	envK := "QEMU_SYSTEM_" + strings.ToUpper(qemuArch(arch))
 	if envV := os.Getenv(envK); envV != "" {
 		ss, err := shellwords.Parse(envV)
-- 
2.48.1

