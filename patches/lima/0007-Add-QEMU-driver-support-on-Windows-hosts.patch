From 6e41ae16aa3d32e5ac012cd8e66761ad4557b3f9 Mon Sep 17 00:00:00 2001
From: Arthur Sengileyev <arthur.sengileyev@gmail.com>
Date: Thu, 6 Mar 2025 22:02:13 +0200
Subject: [PATCH] Add QEMU driver support on Windows hosts

---
 hack/test-port-forwarding.pl | 33 +++++++++++++++++++++++++++++++--
 hack/test-templates.sh       |  3 +++
 pkg/hostagent/hostagent.go   |  7 ++++++-
 3 files changed, 40 insertions(+), 3 deletions(-)

diff --git a/hack/test-port-forwarding.pl b/hack/test-port-forwarding.pl
index b812060c..ac325b60 100755
--- a/hack/test-port-forwarding.pl
+++ b/hack/test-port-forwarding.pl
@@ -27,12 +27,19 @@ my $addr = scalar gethostbyname(hostname());
 my $ipv4 = length $addr ? inet_ntoa($addr) : "127.0.0.1";
 my $ipv6 = ""; # todo
 
+$ENV{LIMA_SSH_PORT_FORWARDER} ||= "true";
+
 # macOS GitHub runners seem to use "localhost" as the hostname
 if ($ipv4 eq "127.0.0.1" && $Config{osname} eq "darwin") {
     $ipv4 = qx(system_profiler SPNetworkDataType -json | jq -r 'first(.SPNetworkDataType[] | select(.ip_address) | .ip_address) | first');
     chomp $ipv4;
 }
 
+if ($Config{osname} eq "msys" && "$ENV{LIMA_SSH_PORT_FORWARDER}" ne "false") {
+  $ipv4 = qx(wsl -d lima-infra ip -4 -o addr show eth0 | awk '{print \$4}' | cut -d/ -f1);
+  chomp $ipv4;
+}
+
 # If $instance is a filename, add our portForwards to it to enable testing
 if (-f $instance) {
     open(my $fh, "+< $instance") or die "Can't open $instance for read/write: $!";
@@ -96,12 +103,34 @@ while (<DATA>) {
     /^(forward|ignore):\s+([0-9.:]+)\s+(\d+)(?:\s+â†’)?(?:\s+([0-9.:]+)(?:\s+(\d+))?)?/;
     die "Cannot parse test '$_'" unless $1;
     my %test; @test{qw(mode guest_ip guest_port host_ip host_port)} = ($1, $2, $3, $4, $5);
+
+    $test{host_ip} ||= "127.0.0.1";
+    $test{host_port} ||= $test{guest_port};
+
     if ($test{mode} eq "forward" && $test{host_port} < 1024 && $Config{osname} ne "darwin") {
         printf "ðŸš§ Not supported on $Config{osname}: # $_\n";
         next;
     }
-    $test{host_ip} ||= "127.0.0.1";
-    $test{host_port} ||= $test{guest_port};
+    if ($test{mode} eq "forward" && $test{host_ip} eq "::" && $Config{osname} eq "msys" && "$ENV{LIMA_SSH_PORT_FORWARDER}" ne "false") {
+        printf "ðŸš§ Not supported on $Config{osname}: # $_\n";
+        next;
+    }
+    if ($test{guest_ip} eq "192.168.5.15" && $instance eq "wsl2") {
+        printf "ðŸš§ Not supported on $Config{osname} for $instance: # $_\n";
+        next;
+    }
+    if ($test{mode} eq "forward" && $test{guest_ip} eq "0.0.0.0" && $test{host_port} eq $test{guest_port} && $instance eq "wsl2") {
+        printf "ðŸš§ Not supported on $Config{osname} for $instance: # $_\n";
+        next;
+    }
+    if ($test{mode} eq "ignore" && $test{host_ip} eq "127.0.0.1" && $test{guest_ip} eq "127.0.0.1" && $test{host_port} eq $test{guest_port} && $instance eq "wsl2") {
+        printf "ðŸš§ Not supported on $Config{osname} for $instance: # $_\n";
+        next;
+    }
+    if ($test{mode} eq "ignore" && $test{host_ip} eq "127.0.0.1" && $test{guest_ip} eq "0.0.0.0" && $test{host_port} eq $test{guest_port} && $instance eq "wsl2") {
+        printf "ðŸš§ Not supported on $Config{osname} for $instance: # $_\n";
+        next;
+    }
 
     my $remote = JoinHostPort($test{guest_ip},$test{guest_port});
     my $local = JoinHostPort($test{host_ip},$test{host_port});
diff --git a/hack/test-templates.sh b/hack/test-templates.sh
index 487608b0..9242e692 100755
--- a/hack/test-templates.sh
+++ b/hack/test-templates.sh
@@ -344,6 +344,9 @@ if [[ -n ${CHECKS["port-forwards"]} ]]; then
 		else
 			hostip=$(perl -MSocket -MSys::Hostname -E 'say inet_ntoa(scalar gethostbyname(hostname()))')
 		fi
+		if [[ "$(uname -o)" = "Msys" && "${LIMA_SSH_PORT_FORWARDER-true}" != "false" ]]; then
+			hostip=$(wsl -d lima-infra ip -4 -o addr show eth0 | awk '{print $4}' | cut -d/ -f1)
+		fi
 		if [ -n "${hostip}" ]; then
 			sudo=""
 			if [[ ${NAME} == "alpine"* ]]; then
diff --git a/pkg/hostagent/hostagent.go b/pkg/hostagent/hostagent.go
index 248e76bd..3e39c7d8 100644
--- a/pkg/hostagent/hostagent.go
+++ b/pkg/hostagent/hostagent.go
@@ -14,6 +14,7 @@ import (
 	"os"
 	"os/exec"
 	"path/filepath"
+	"runtime"
 	"strconv"
 	"strings"
 	"sync"
@@ -135,7 +136,11 @@ func New(instName string, stdout io.Writer, signalCh chan os.Signal, opts ...Opt
 		vSockPort = port
 	} else if *inst.Config.VMType == limayaml.QEMU {
 		// virtserialport doesn't seem to work reliably: https://github.com/lima-vm/lima/issues/2064
-		virtioPort = "" // filenames.VirtioPort
+		if runtime.GOOS != "windows" {
+			virtioPort = "" // filenames.VirtioPort
+		} else {
+			virtioPort = filenames.VirtioPort
+		}
 	}
 
 	if err := cidata.GenerateCloudConfig(inst.Dir, instName, inst.Config); err != nil {
-- 
2.48.1

